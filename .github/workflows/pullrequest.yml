name: Pull request workflow

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]

env:
  TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI}}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  
jobs:
  lint:
    name: Lint 
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: actions/setup-node@v3
      - name: Npm install
        run: npm install
      - name: lint
        run: npm run lint

  test:
    name: Test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        uses: actions/setup-node@v3
      - name: Npm install
        run: npm run install:full
      - name: Run tests
        run: npm run test:deployment
        env:
          NODE_ENV: test

  notify_webhook:
    needs: [lint, test]
    if: always()
    name: Send discord notification
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Success
        if: success()
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: info
          details: 'New pull request ready to be reviewed.' 
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
          text: '<@everyone>'
      - name: Failure
        if: failure()
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: error
          details: 'New pull request, but it did not pass some checks.' 
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}       
      - name: Cancelled
        if: cancelled()
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: warn
          details: 'New pull request ready to be reviewed.' 
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}